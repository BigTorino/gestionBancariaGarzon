{"version":3,"file":"testing.js","sources":["../../../../../../packages/common/testing/src/location_mock.ts","../../../../../../packages/common/testing/src/mock_location_strategy.ts","../../../../../../packages/common/testing/src/mock_platform_location.ts","../../../../../../packages/common/testing/src/testing.ts","../../../../../../packages/common/testing/public_api.ts","../../../../../../packages/common/testing/index.ts","../../../../../../packages/common/testing/testing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy, PlatformLocation} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '', null)];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null!;\n  /** @internal */\n  _platformLocation: PlatformLocation = null!;\n  /** @internal */\n  _urlChangeListeners: ((url: string, state: unknown) => void)[] = [];\n  /** @internal */\n  _urlChangeSubscription?: SubscriptionLike;\n\n  setInitialPath(url: string) {\n    this._history[this._historyIndex].path = url;\n  }\n\n  setBaseHref(url: string) {\n    this._baseHref = url;\n  }\n\n  path(): string {\n    return this._history[this._historyIndex].path;\n  }\n\n  getState(): unknown {\n    return this._history[this._historyIndex].state;\n  }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) {\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'popstate'});\n  }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n  onUrlChange(fn: (url: string, state: unknown) => void) {\n    this._urlChangeListeners.push(fn);\n\n    if (!this._urlChangeSubscription) {\n      this._urlChangeSubscription = this.subscribe(v => {\n        this._notifyUrlChangeListeners(v.url, v.state);\n      });\n    }\n  }\n\n  /** @internal */\n  _notifyUrlChangeListeners(url: string = '', state: unknown) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string {\n    return null!;\n  }\n}\n\nclass LocationState {\n  constructor(public path: string, public query: string, public state: any) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  private stateChanges: any[] = [];\n  constructor() {\n    super();\n  }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string {\n    return this.internalPath;\n  }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    // Add state change to changes array\n    this.stateChanges.push(ctx);\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    // Reset the last index of stateChanges to the ctx (state) object\n    this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void {\n    this._subject.subscribe({next: fn});\n  }\n\n  getBaseHref(): string {\n    return this.internalBaseHref;\n  }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      this.stateChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void {\n    throw 'not implemented';\n  }\n\n  getState(): unknown {\n    return this.stateChanges[(this.stateChanges.length || 1) - 1];\n  }\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\nfunction parseUrl(urlStr: string, baseHref: string) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase: string|undefined;\n\n  // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n  let parsedUrl: {\n    protocol: string,\n    hostname: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string\n  };\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    const result = urlParse.exec(serverBase || '' + urlStr);\n    if (!result) {\n      throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n    }\n    const hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8],\n    };\n  }\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n\n/**\n * Mock platform location config\n *\n * @publicApi\n */\nexport interface MockPlatformLocationConfig {\n  startUrl?: string;\n  appBaseHref?: string;\n}\n\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nexport const MOCK_PLATFORM_LOCATION_CONFIG =\n    new InjectionToken<MockPlatformLocationConfig>('MOCK_PLATFORM_LOCATION_CONFIG');\n\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockPlatformLocation implements PlatformLocation {\n  private baseHref: string = '';\n  private hashUpdate = new Subject<LocationChangeEvent>();\n  private urlChanges: {\n    hostname: string,\n    protocol: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string,\n    state: unknown\n  }[] = [{hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null}];\n\n  constructor(@Inject(MOCK_PLATFORM_LOCATION_CONFIG) @Optional() config?:\n                  MockPlatformLocationConfig) {\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n\n      const parsedChanges =\n          this.parseChanges(null, config.startUrl || 'http://<empty>/', this.baseHref);\n      this.urlChanges[0] = {...parsedChanges};\n    }\n  }\n\n  get hostname() {\n    return this.urlChanges[0].hostname;\n  }\n  get protocol() {\n    return this.urlChanges[0].protocol;\n  }\n  get port() {\n    return this.urlChanges[0].port;\n  }\n  get pathname() {\n    return this.urlChanges[0].pathname;\n  }\n  get search() {\n    return this.urlChanges[0].search;\n  }\n  get hash() {\n    return this.urlChanges[0].hash;\n  }\n  get state() {\n    return this.urlChanges[0].state;\n  }\n\n\n  getBaseHrefFromDOM(): string {\n    return this.baseHref;\n  }\n\n  onPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    this.hashUpdate.subscribe(fn);\n  }\n\n  get href(): string {\n    let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n    url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n    return url;\n  }\n\n  get url(): string {\n    return `${this.pathname}${this.search}${this.hash}`;\n  }\n\n  private parseChanges(state: unknown, url: string, baseHref: string = '') {\n    // When the `history.state` value is stored, it is always copied.\n    state = JSON.parse(JSON.stringify(state));\n    return {...parseUrl(url, baseHref), state};\n  }\n\n  replaceState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n\n    this.urlChanges[0] = {...this.urlChanges[0], pathname, search, hash, state: parsedState};\n  }\n\n  pushState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n    this.urlChanges.unshift({...this.urlChanges[0], pathname, search, hash, state: parsedState});\n  }\n\n  forward(): void {\n    throw new Error('Not implemented');\n  }\n\n  back(): void {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    this.urlChanges.shift();\n    const newHash = this.hash;\n\n    if (oldHash !== newHash) {\n      scheduleMicroTask(\n          () => this.hashUpdate.next(\n              {type: 'hashchange', state: null, oldUrl, newUrl: this.url} as LocationChangeEvent));\n    }\n  }\n\n  getState(): unknown {\n    return this.state;\n  }\n}\n\nexport function scheduleMicroTask(cb: () => any) {\n  Promise.resolve(null).then(cb);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common/testing package.\n */\nexport {SpyLocation} from './location_mock';\nexport {MockLocationStrategy} from './mock_location_strategy';\nexport {MOCK_PLATFORM_LOCATION_CONFIG, MockPlatformLocation, MockPlatformLocationConfig} from './mock_platform_location';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}