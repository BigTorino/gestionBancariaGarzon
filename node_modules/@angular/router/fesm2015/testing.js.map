{"version":3,"file":"testing.js","sources":["../../../../../../packages/router/testing/src/router_testing_module.ts","../../../../../../packages/router/testing/src/testing.ts","../../../../../../packages/router/testing/public_api.ts","../../../../../../packages/router/testing/index.ts","../../../../../../packages/router/testing/testing.ts"],"names":["flatten","assignExtraOptionsToRouter","ROUTER_PROVIDERS"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {MockLocationStrategy, SpyLocation} from '@angular/common/testing';\nimport {Compiler, Injectable, Injector, ModuleWithProviders, NgModule, NgModuleFactory, NgModuleFactoryLoader, Optional} from '@angular/core';\nimport {ChildrenOutletContexts, ExtraOptions, NoPreloading, PreloadingStrategy, provideRoutes, Route, Router, ROUTER_CONFIGURATION, RouterModule, ROUTES, Routes, UrlHandlingStrategy, UrlSerializer, ɵassignExtraOptionsToRouter as assignExtraOptionsToRouter, ɵflatten as flatten, ɵROUTER_PROVIDERS as ROUTER_PROVIDERS} from '@angular/router';\n\n\n\n/**\n * @description\n *\n * Allows to simulate the loading of ng modules in tests.\n *\n * ```\n * const loader = TestBed.inject(NgModuleFactoryLoader);\n *\n * @Component({template: 'lazy-loaded'})\n * class LazyLoadedComponent {}\n * @NgModule({\n *   declarations: [LazyLoadedComponent],\n *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n * })\n *\n * class LoadedModule {}\n *\n * // sets up stubbedModules\n * loader.stubbedModules = {lazyModule: LoadedModule};\n *\n * router.resetConfig([\n *   {path: 'lazy', loadChildren: 'lazyModule'},\n * ]);\n *\n * router.navigateByUrl('/lazy/loaded');\n * ```\n *\n * @publicApi\n */\n@Injectable()\nexport class SpyNgModuleFactoryLoader implements NgModuleFactoryLoader {\n  /**\n   * @docsNotRequired\n   */\n  private _stubbedModules: {[path: string]: Promise<NgModuleFactory<any>>} = {};\n\n  /**\n   * @docsNotRequired\n   */\n  set stubbedModules(modules: {[path: string]: any}) {\n    const res: {[path: string]: any} = {};\n    for (const t of Object.keys(modules)) {\n      res[t] = this.compiler.compileModuleAsync(modules[t]);\n    }\n    this._stubbedModules = res;\n  }\n\n  /**\n   * @docsNotRequired\n   */\n  get stubbedModules(): {[path: string]: any} {\n    return this._stubbedModules;\n  }\n\n  constructor(private compiler: Compiler) {}\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    if (this._stubbedModules[path]) {\n      return this._stubbedModules[path];\n    } else {\n      return <any>Promise.reject(new Error(`Cannot find module ${path}`));\n    }\n  }\n}\n\nfunction isUrlHandlingStrategy(opts: ExtraOptions|\n                               UrlHandlingStrategy): opts is UrlHandlingStrategy {\n  // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n  // runtime.\n  return 'shouldProcessUrl' in opts;\n}\n\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][],\n    opts?: ExtraOptions, urlHandlingStrategy?: UrlHandlingStrategy): Router;\n\n/**\n * Router setup factory function used for testing.\n *\n * @deprecated As of v5.2. The 2nd-to-last argument should be `ExtraOptions`, not\n * `UrlHandlingStrategy`\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][],\n    urlHandlingStrategy?: UrlHandlingStrategy): Router;\n\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][],\n    opts?: ExtraOptions|UrlHandlingStrategy, urlHandlingStrategy?: UrlHandlingStrategy) {\n  const router = new Router(\n      null!, urlSerializer, contexts, location, injector, loader, compiler, flatten(routes));\n  if (opts) {\n    // Handle deprecated argument ordering.\n    if (isUrlHandlingStrategy(opts)) {\n      router.urlHandlingStrategy = opts;\n    } else {\n      // Handle ExtraOptions\n      assignExtraOptionsToRouter(opts, router);\n    }\n  }\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n  return router;\n}\n\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n * NgModuleFactoryLoader}.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\n@NgModule({\n  exports: [RouterModule],\n  providers: [\n    ROUTER_PROVIDERS, {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy},\n    {provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader}, {\n      provide: Router,\n      useFactory: setupTestingRouter,\n      deps: [\n        UrlSerializer, ChildrenOutletContexts, Location, NgModuleFactoryLoader, Compiler, Injector,\n        ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()]\n      ]\n    },\n    {provide: PreloadingStrategy, useExisting: NoPreloading}, provideRoutes([])\n  ]\n})\nexport class RouterTestingModule {\n  static withRoutes(routes: Routes, config?: ExtraOptions):\n      ModuleWithProviders<RouterTestingModule> {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [\n        provideRoutes(routes),\n        {provide: ROUTER_CONFIGURATION, useValue: config ? config : {}},\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router/testing package.\n */\nexport * from './router_testing_module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}